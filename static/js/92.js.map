{"version":3,"file":"static/js/92.js","sources":["webpack:///./src/utils/simulationRequest.js"],"sourcesContent":["import axios from \"axios\";\nimport {\n  errorCode,\n  invalidCode,\n  messageDuration,\n  noPermissionCode,\n  requestTimeout,\n  successCode,\n  tokenName,\n} from \"@/settings\";\nimport { Loading, Message } from \"element-ui\";\nimport store from \"@/store\";\nimport qs from \"qs\";\nimport router from \"@/router\";\n\nconst service = axios.create({\n  baseURL: process.env.VUE_APP_OTHER_API,\n  timeout: requestTimeout,\n  headers: {\n    \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\n  },\n});\nlet loadingInstance;\nservice.interceptors.request.use(\n  (config) => {\n    if (store.getters.accessToken) {\n      config.headers[tokenName] = store.getters.accessToken;\n    }\n    //RSA加密不走qs转义,默认传json给后端\n    if (config.data && !config.data.param) {\n      config.data = qs.stringify(config.data);\n    }\n\n    if (\n      config.url.includes(\"add\") ||\n      config.url.includes(\"edit\") ||\n      config.url.includes(\"update\") ||\n      config.url.includes(\"import\") ||\n      config.url.includes(\"export\")\n    ) {\n      loadingInstance = Loading.service();\n    }\n\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\nconst errorMsg = (message) => {\n  return Message({\n    message: message,\n    type: \"error\",\n    duration: messageDuration,\n  });\n};\n\nservice.interceptors.response.use(\n  (response) => {\n    if (loadingInstance) {\n      loadingInstance.close();\n    }\n    const { status, data } = response;\n    const { code, msg } = data;\n    if (code !== successCode) {\n      if (code == invalidCode) {\n        errorMsg(msg || \"后端接口402异常\");\n        store.dispatch(\"user/resetToken\");\n      } else if (code == errorCode) {\n        errorMsg(msg || \"后端接口500异常\");\n      } else if (code == noPermissionCode) {\n        router.push({\n          path: \"/401\",\n        });\n      } else {\n        errorMsg(msg || \"后端接口code异常\");\n      }\n      return Promise.reject(new Error(msg || \"Error\"));\n    } else {\n      return data;\n    }\n  },\n  (error) => {\n    if (loadingInstance) {\n      loadingInstance.close();\n    }\n    /*网络连接过程异常处理*/\n    let { message } = error;\n    if (message == \"Network Error\") {\n      message = \"后端接口连接异常\";\n    }\n    if (message.includes(\"timeout\")) {\n      message = \"后端接口请求超时\";\n    }\n    if (message.includes(\"Request failed with status code\")) {\n      message = \"后端接口\" + message.substr(message.length - 3) + \"异常\";\n    }\n    errorMsg(message || \"后端接口未知异常\");\n    return Promise.reject(error);\n  }\n);\nexport default service;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AASA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAKA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;;;;A","sourceRoot":""}